{"version":3,"sources":["components/Searchbar/Searchbar.jsx","services/searchPhotos.js","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/Modal/Modal.jsx","App.js","reportWebVitals.js","index.js"],"names":["Searchbar","onSubmit","useState","query","setQuery","className","e","preventDefault","trim","toast","error","type","autoComplete","value","onChange","target","autoFocus","placeholder","requestApi","crntPage","axios","get","then","responce","data","total","hits","Promise","reject","Error","ImageGalleryItem","url","openModal","largeUrl","category","data-url","src","alt","onClick","ImageGallery","photos","openLargePhoto","map","photo","webformatURL","largeImageURL","id","Button","modalRoot","document","querySelector","Modal","handleKeyDown","key","props","onClose","handleBackdropClick","currentTarget","window","addEventListener","this","removeEventListener","createPortal","Component","App","setPhotos","setCrntPage","showModal","setShowModal","setLargeUrl","setError","isLoading","setIsLoading","fetchPhotos","a","options","newPhotos","prevState","scrollDown","useEffect","toggleModal","scrollTo","top","documentElement","scrollHeight","behavior","shouldRenderLoadMoreButton","length","dataset","color","height","width","message","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4e77b8ec.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\n\nfunction Searchbar({ onSubmit }) {\n  const [query, setQuery] = useState('');\n\n  const handleInput = ({ target }) => {\n    setQuery(target.value);\n  };\n\n  const handleSumbit = e => {\n    e.preventDefault();\n\n    if (query.trim() === '') {\n      return toast.error('Please enter the key word');\n    }\n    setQuery('');\n    onSubmit(query);\n  };\n\n  return (\n    <header className=\"Searchbar\">\n      <form className=\"SearchForm\" onSubmit={handleSumbit}>\n        <button className=\"SearchForm-button\" type=\"submit\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n\n        <label>\n          <input\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            value={query}\n            onChange={handleInput}\n            autoFocus\n            placeholder=\"Search images\"\n          />\n        </label>\n      </form>\n    </header>\n  );\n}\n\nexport default Searchbar;\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import axios from 'axios';\n\nconst KEY = '19419978-f0acf28c61118c5b5b844fb84';\n\nconst requestApi = ({ query, crntPage }) => {\n  return axios\n    .get(\n      `https://pixabay.com/api/?key=${KEY}&q=${query}&page=${crntPage}&image_type=photo&orientation=horizontal&per_page=12`,\n    )\n    .then(responce => {\n      if (responce.data.total) {\n        return responce.data.hits;\n      }\n      return Promise.reject(new Error(`No photos of ${query}`));\n    });\n};\n\nexport default requestApi;\n","import PropTypes from 'prop-types';\n\nexport default function ImageGalleryItem({\n  url,\n  openModal,\n  largeUrl,\n  category,\n}) {\n  return (\n    <img\n      data-url={largeUrl}\n      src={url}\n      alt={category}\n      className=\"ImageGalleryItem-image\"\n      onClick={openModal}\n    />\n  );\n}\n\nImageGalleryItem.propTypes = {\n  url: PropTypes.string.isRequired,\n  openModal: PropTypes.func.isRequired,\n  largeUrl: PropTypes.string.isRequired,\n  category: PropTypes.string,\n};\n","import PropTypes, { shape } from 'prop-types';\n\nimport ImageGalleryItem from './ImageGalleryItem/ImageGalleryItem';\n\nexport default function ImageGallery({ photos, openModal, openLargePhoto }) {\n  return (\n    <ul className=\"ImageGallery \">\n      {photos.map(photo => {\n        return (\n          <li\n            key={photo.id}\n            onClick={openLargePhoto}\n            className=\"ImageGalleryItem\"\n          >\n            <ImageGalleryItem\n              category={photo.category}\n              url={photo.webformatURL}\n              largeUrl={photo.largeImageURL}\n              openModal={openModal}\n            />\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nImageGallery.propTypes = {\n  photos: PropTypes.arrayOf(shape).isRequired,\n  openModal: PropTypes.func.isRequired,\n  openLargePhoto: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nexport default function Button({ onClick }) {\n  return (\n    <button onClick={onClick} className=\"Button\" type=\"button\">\n      Load More\n    </button>\n  );\n}\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nclass Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = ({ key }) => {\n    if (key === 'Escape') {\n      this.props.onClose();\n    }\n  };\n  handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    return createPortal(\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\n        <div className=\"Modal\">\n          <img src={this.props.largeUrl} alt=\"\" />\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n\nexport default Modal;\n\nModal.propTypes = {\n  largeUrl: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport Loader from 'react-loader-spinner';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport './App.css';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport requestApi from './services/searchPhotos';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport Button from './components/Button/Button';\nimport Modal from './components/Modal/Modal';\n\nfunction App() {\n  const [photos, setPhotos] = useState([]);\n  const [crntPage, setCrntPage] = useState(1);\n  const [query, setQuery] = useState('');\n  const [showModal, setShowModal] = useState(false);\n  const [largeUrl, setLargeUrl] = useState('');\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    fetchPhotos();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [query]);\n\n  async function fetchPhotos() {\n    if (!query) return;\n\n    const options = { query, crntPage };\n\n    setIsLoading(true);\n\n    try {\n      const newPhotos = await requestApi(options);\n      setPhotos(prevState => {\n        return [...prevState, ...newPhotos];\n      });\n      setCrntPage(prevState => {\n        return prevState + 1;\n      });\n    } catch {\n      setError(error);\n    } finally {\n      setIsLoading(false);\n      scrollDown();\n    }\n  }\n\n  const onChangeQuery = query => {\n    setQuery(query);\n    setCrntPage(1);\n    setPhotos([]);\n    setError(null);\n  };\n\n  const toggleModal = () => {\n    setShowModal(prevState => {\n      return !prevState;\n    });\n  };\n\n  const openLargePhoto = ({ target }) => {\n    const url = target.dataset.url;\n\n    setLargeUrl(url);\n  };\n\n  function scrollDown() {\n    if (crntPage > 1) {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      });\n    }\n  }\n\n  const shouldRenderLoadMoreButton = photos.length > 0 && !isLoading;\n\n  return (\n    <>\n      <Searchbar onSubmit={onChangeQuery} />\n      <ImageGallery\n        photos={photos}\n        openModal={toggleModal}\n        openLargePhoto={openLargePhoto}\n      />\n      {isLoading && (\n        <Loader\n          className=\"Loader\"\n          type=\"Audio\"\n          color=\"#00BFFF\"\n          height={100}\n          width={100}\n        />\n      )}\n      {error && (\n        <p className=\"error\">Whoops, something went wrong: {error.message}</p>\n      )}\n      {shouldRenderLoadMoreButton && <Button onClick={fetchPhotos} />}\n      {showModal && <Modal largeUrl={largeUrl} onClose={toggleModal} />}\n      <ToastContainer />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}